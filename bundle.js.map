{"version":3,"file":"bundle.js","mappings":"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AAS,EAAG,EAAG,EAAG,GACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,GACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,GACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,GACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,GACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,GACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,GACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,GACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,GACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,GACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,GACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,GACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,GACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,IACvB9K,KAAK8K,SAAS,EAAG,EAAG,EAAG,GAC3B,CACAA,SAASV,EAAO7D,EAAKC,EAAKuE,GACtB,IAAIC,EAAIC,EACR,MAAMC,GAAqBF,EAAKhL,KAAKoG,MAAM6E,EAnDnD,SAAuB1E,EAAKC,EAAKC,GAE7B,OADW,IAAMF,EAAMC,EAAMC,GACjB,EAAIF,EAAM,EAAIC,CAC9B,CAgDwD2E,CAAc5E,EAAKC,EAAKuE,MAAeC,EAAGC,GAAM,CAAC,IACvEC,EAAkBH,KAAcG,EAAkBH,GAAY,IAAIb,IAC1EG,MAAMhG,KAAK,IAAI8F,EAAeC,EAAO7D,EAAKC,EAAKuE,GACrE,CACAxD,QAAQP,EAAY+D,GAEhB,OADa/K,KAAKoG,KAAKY,GAAY+D,KAK/BJ,QAAQS,KAAK,8BAA8BpE,gBAAyB+D,KAC7D,IAAIb,EAEnB,CACAmB,SACI9L,OAAOqI,OAAOrI,OAAO8L,OAAOrL,KAAKoG,OAC5Bd,SAAQqB,GAAKpH,OAAOqI,OAAOrI,OAAO8L,OAAO1E,IACzCrB,SAAQqB,GAAKpH,OAAO8L,OAAO1E,EAAE0D,UACtC,E,cCnIJ9K,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6L,qBAAkB,EA6D1B7L,EAAQ6L,gBA5DR,MACIxL,YAAYC,GACRC,KAAK+E,aAAe5E,SAASC,cAAc,SAC3CJ,KAAKuL,WAAa,IAAIC,IACtBzL,EAAO+C,YAAY9C,KAAK+E,cACxB/E,KAAKyL,aACT,CACAA,cACI,MAAMvH,EAAMlE,KAAK+E,aAAarB,YAC9BQ,EAAI5C,aAAaoK,UAAY,eAC7BxH,EAAI5C,aAAaoK,UAAY,aAC7BxH,EAAI5C,aAAaoK,UAAY,aAC7BxH,EAAI5C,aAAaoK,UAAY,cACjC,CACAC,WAAW/B,GACP,MAAM1F,EAAMlE,KAAK+E,aAAarB,YAC9B1D,KAAKuL,WAAWK,IAAIhC,EAAM1F,EAAI2H,UAC9B3H,EAAI5C,aAAaqB,UAAYiH,EAAKQ,MAAMnJ,WACxCiD,EAAI5C,aAAaqB,UAAYiH,EAAKrD,IAAItF,WACtCiD,EAAI5C,aAAaqB,UAAYiH,EAAKpD,IAAIvF,WACtCiD,EAAI5C,aAAaqB,UAAYiH,EAAK5I,MAAMC,UAC5C,CACA6K,WAAWlC,GACP,MAAMmC,EAAY/L,KAAKuL,WAAWS,IAAIpC,GACtC,GAAImC,EAAW,CACX,MAAME,EAAU,IAAIT,IACpB,IAAK,MAAO1K,EAAKpB,KAAUM,KAAKuL,WAAWW,UACvCD,EAAQL,IAAI9K,EAAKd,KAAK+E,aAAaC,KAAKtF,IAE5CM,KAAK+E,aAAaoH,UAAUJ,GAC5B/L,KAAKuL,WAAWhC,OAAOK,GACvBqC,EAAQ1C,OAAOK,GACf,IAAK,MAAO9I,EAAKpB,KAAUuM,EAAQC,UAC/BlM,KAAKuL,WAAWK,IAAI9K,EAAKpB,EAAMmM,SAEvC,MAEIlB,QAAQS,KAAK,8CAAgDxB,EAErE,CACApC,QAAQ+C,GACJ,IAAK,MAAMzJ,KAAOd,KAAKuL,WAAWlC,OAC9BrJ,KAAK8L,WAAWhL,GAEpB,IAAK,MAAM8I,KAAQW,EAAKF,MACpBrK,KAAK2L,WAAW/B,GAEpBW,EAAKD,UAAY,KACb,MAAM8B,EAAgB,IAAIlD,IAAIlJ,KAAKuL,WAAWlC,QAC9C,IAAK,MAAMO,KAAQW,EAAKF,MACf+B,EAAc7C,OAAOK,IACtB5J,KAAK2L,WAAW/B,GAGxB,IAAK,MAAMA,KAAQwC,EAAc/C,OAC7BrJ,KAAK8L,WAAWlC,EACpB,CAER,E,cC5DJrK,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQsB,MAAQtB,EAAQe,cAAW,EAEnCf,EAAQe,SADS,OAKjBf,EAAQsB,MAHR,SAAerB,EAAOgB,EAAKC,GACvB,OAAOkK,KAAKlK,IAAIkK,KAAKnK,IAAIhB,EAAOiB,GAAMD,EAC1C,C,GCNI2L,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAa/M,QAGrB,IAAIiN,EAASL,EAAyBE,GAAY,CAGjD9M,QAAS,CAAC,GAOX,OAHAkN,EAAoBJ,GAAUG,EAAQA,EAAOjN,QAAS6M,GAG/CI,EAAOjN,OACf,C,MCpBA,MAAMmN,EAAa,EAAQ,KACrBC,EAAiB,EAAQ,KACzBC,EAAe,EAAQ,KACvBC,EAAoB,EAAQ,KAClCC,OAAOC,SAAW,IAAIL,EAAWzG,SAAS6G,OAAO5G,KAAO,IAAI0G,EAAa7C,WAAc+C,OAAO3G,aAAe,IAAIwG,EAAelN,aAAaQ,SAAS+M,MAAOF,OAAO1G,gBAAkB,IAAIyG,EAAkBzB,gBAAgBnL,SAAS+M,M","sources":["webpack://voltorbflip-solver/./src/analyzeTable.ts","webpack://voltorbflip-solver/./src/analyzer.ts","webpack://voltorbflip-solver/./src/dictionary.ts","webpack://voltorbflip-solver/./src/dictionaryTable.ts","webpack://voltorbflip-solver/./src/utils.ts","webpack://voltorbflip-solver/webpack/bootstrap","webpack://voltorbflip-solver/./src/index.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TableAnalyze = void 0;\nconst utils_1 = require(\"./utils\");\nclass InputCell {\n    constructor(parent) {\n        this.cellType = 'input';\n        this.inputCoins = document.createElement('input');\n        this.inputVolts = document.createElement('input');\n        this.canChangeInternal = true;\n        this.onEnterPressed = utils_1.noopFunc;\n        this.inputCoins.type = 'number';\n        this.inputCoins.value = '0';\n        this.inputCoins.min = '0';\n        this.inputCoins.max = '15';\n        this.inputCoins.addEventListener('keydown', ev => {\n            if (ev.key === 'Enter') {\n                this.inputCoins.value = (0, utils_1.clamp)(this.coins, 0, 15).toString();\n                this.inputCoins.blur();\n                this.inputVolts.select();\n            }\n        });\n        this.inputVolts.type = 'number';\n        this.inputVolts.value = '0';\n        this.inputVolts.min = '0';\n        this.inputVolts.max = '5';\n        this.inputVolts.addEventListener('keydown', ev => {\n            if (ev.key === 'Enter') {\n                this.inputVolts.value = (0, utils_1.clamp)(this.volts, 0, 5).toString();\n                this.inputVolts.blur();\n                this.onEnterPressed();\n            }\n        });\n        this.element = parent.insertCell();\n        this.element.append(this.inputCoins, this.inputVolts);\n    }\n    reset() {\n        this.inputCoins.value = '0';\n        this.inputVolts.value = '0';\n    }\n    focus() {\n        this.inputCoins.select();\n    }\n    get coins() {\n        return parseInt(this.inputCoins.value) || 0;\n    }\n    get volts() {\n        return parseInt(this.inputVolts.value) || 0;\n    }\n    get canChange() {\n        return this.canChangeInternal;\n    }\n    set canChange(value) {\n        this.inputCoins.disabled = !value;\n        this.inputVolts.disabled = !value;\n        this.canChangeInternal = value;\n    }\n}\nclass AnalyzeCell {\n    constructor(parent, onSelectChange) {\n        this.onSelectChange = onSelectChange;\n        this.cellType = 'analyze';\n        this.possibleValuesInternal = 15 /* PossibleValue.All */;\n        this.solvedValueInternal = 0 /* SelectedValue.None */;\n        this.selectedValue = 0 /* SelectedValue.None */;\n        this.element = parent.insertCell();\n        this.btnV = this.createButton(1 /* SelectedValue.Voltorb */, '0');\n        this.btn1 = this.createButton(2 /* SelectedValue.Coin1 */, '1');\n        this.btn2 = this.createButton(3 /* SelectedValue.Coin2 */, '2');\n        this.btn3 = this.createButton(4 /* SelectedValue.Coin3 */, '3');\n        this.reset();\n    }\n    reset() {\n        this.possibleValuesInternal = 15 /* PossibleValue.All */;\n        this.solvedValueInternal = 0 /* SelectedValue.None */;\n        this.selectedValue = 0 /* SelectedValue.None */;\n        this.updateButtonsStatus();\n    }\n    createButton(value, displayText) {\n        const button = document.createElement('button');\n        button.onclick = () => {\n            this.onSelectChange(this.selectedValue = value);\n            this.updateButtonsStatus();\n        };\n        button.innerText = displayText;\n        button.classList.add('analyze');\n        this.element.appendChild(button);\n        return button;\n    }\n    updateButtonsStatus() {\n        this.updateButtonStatus(this.btnV, 1 /* PossibleValue.Voltorb */, 1 /* SelectedValue.Voltorb */);\n        this.updateButtonStatus(this.btn1, 2 /* PossibleValue.Coin1 */, 2 /* SelectedValue.Coin1 */);\n        this.updateButtonStatus(this.btn2, 4 /* PossibleValue.Coin2 */, 3 /* SelectedValue.Coin2 */);\n        this.updateButtonStatus(this.btn3, 8 /* PossibleValue.Coin3 */, 4 /* SelectedValue.Coin3 */);\n    }\n    updateButtonStatus(button, value, index) {\n        const isPossible = !!(value & this.possibleValuesInternal);\n        const isSelected = index === this.selectedValue;\n        button.disabled = !isPossible;\n        if (index === 1 /* SelectedValue.Voltorb */) {\n            button.classList.add('voltorb');\n        }\n        else {\n            button.classList.remove('voltorb');\n        }\n        if (this.solvedValueInternal) {\n            if (this.solvedValueInternal === index) {\n                button.classList.add('selected');\n                button.classList.remove('impossible');\n            }\n            else {\n                button.classList.remove('voltorb');\n                button.classList.remove('selected');\n                button.classList.add('impossible');\n            }\n        }\n        else {\n            if (index === 1 /* SelectedValue.Voltorb */) {\n                button.classList.add('voltorb');\n            }\n            else {\n                button.classList.remove('voltorb');\n            }\n            if (!isPossible) {\n                button.classList.add('impossible');\n            }\n            else {\n                button.classList.remove('impossible');\n            }\n            if (isSelected) {\n                button.classList.add('selected');\n            }\n            else {\n                button.classList.remove('selected');\n            }\n        }\n    }\n    get possibleValues() {\n        return this.possibleValuesInternal;\n    }\n    set possibleValues(value) {\n        this.possibleValuesInternal = value;\n        this.updateButtonsStatus();\n    }\n    get solvedValue() {\n        return this.solvedValueInternal;\n    }\n    solve(value) {\n        this.solvedValueInternal = value;\n        this.updateButtonsStatus();\n    }\n}\nclass SolverRow {\n    constructor(parent) {\n        this.cells = [];\n        this.lastEnterPress = utils_1.noopFunc;\n        this.element = parent.insertRow();\n    }\n    resetAnalyzeCells() {\n        for (let i = 0; i < this.cells.length; i++) {\n            const cell = this.cells[i];\n            if (cell.cellType === 'analyze') {\n                cell.reset();\n            }\n        }\n    }\n    resetInputs() {\n        for (let i = 0; i < this.cells.length; i++) {\n            const cell = this.cells[i];\n            if (cell.cellType === 'input') {\n                cell.reset();\n                cell.canChange = true;\n            }\n        }\n    }\n    unlockInputs() {\n        for (let i = 0; i < this.cells.length; i++) {\n            const cell = this.cells[i];\n            if (cell.cellType === 'input') {\n                cell.canChange = true;\n            }\n        }\n    }\n    static createInputCell(row) {\n        const inputCell = new InputCell(row.element);\n        if (this.previousInputCell) {\n            this.previousInputCell.onEnterPressed = () => inputCell.focus();\n        }\n        row.cells.push(inputCell);\n        this.previousInputCell = inputCell;\n    }\n    static createGoButton(parent, goFunc) {\n        const button = document.createElement('button');\n        button.innerText = 'Go!';\n        button.style.width = '48px';\n        button.style.height = '48px';\n        button.onclick = () => goFunc();\n        const cell = parent.insertCell();\n        cell.appendChild(button);\n        return button;\n    }\n    static createRowCells(parent, onSelect) {\n        const row = new this(parent);\n        for (let i = 0; i < 5; i++) {\n            row.cells.push(new AnalyzeCell(row.element, value => onSelect(i, value)));\n        }\n        this.createInputCell(row);\n        return row;\n    }\n    static createColCells(parent, goFunc) {\n        const row = new this(parent);\n        for (let i = 0; i < 5; i++) {\n            this.createInputCell(row);\n        }\n        const goButton = this.createGoButton(row.element, goFunc);\n        this.previousInputCell.onEnterPressed = () => goButton.click();\n        return row;\n    }\n}\nclass TableAnalyze {\n    constructor(parent) {\n        this.tableElement = document.createElement('table');\n        this.rows = [];\n        this.goFunc = utils_1.noopFunc;\n        this.onSelect = utils_1.noopFunc;\n        for (let i = 0; i < 5; i++) {\n            this.rows.push(SolverRow.createRowCells(this.tableElement, (x, value) => this.onSelect(x, i, value)));\n        }\n        this.rows.push(SolverRow.createColCells(this.tableElement, () => this.goFunc()));\n        parent.appendChild(this.tableElement);\n        const ctrlsDiv = document.createElement('div');\n        parent.appendChild(ctrlsDiv);\n        const btnResetAnalyze = document.createElement('button');\n        btnResetAnalyze.innerText = 'Reset analysis';\n        btnResetAnalyze.onclick = () => this.rows.forEach(r => r.resetAnalyzeCells());\n        ctrlsDiv.appendChild(btnResetAnalyze);\n        const btnUnlockInput = document.createElement('button');\n        btnUnlockInput.innerText = 'Unlock input';\n        btnUnlockInput.onclick = () => this.rows.forEach(r => r.unlockInputs());\n        ctrlsDiv.appendChild(btnUnlockInput);\n        const btnResetInput = document.createElement('button');\n        btnResetInput.innerText = 'Reset input';\n        btnResetInput.onclick = () => this.rows.forEach(r => r.resetInputs());\n        ctrlsDiv.appendChild(btnResetInput);\n    }\n    coinsRow(y) {\n        return this.rows[y].cells[5].coins;\n    }\n    voltsRow(y) {\n        return this.rows[y].cells[5].volts;\n    }\n    coinsCol(x) {\n        return this.rows[5].cells[x].coins;\n    }\n    voltsCol(x) {\n        return this.rows[5].cells[x].volts;\n    }\n    outputAt(x, y) {\n        return this.rows[y].cells[x];\n    }\n    lockInputs() {\n        for (let y = 0; y < 5; y++) {\n            this.rows[y].cells[5].canChange = false;\n        }\n        for (let x = 0; x < 5; x++) {\n            this.rows[5].cells[x].canChange = false;\n        }\n    }\n    setFlag(x, y, flags) {\n        this.rows[y].cells[x].possibleValues = flags;\n    }\n    solve(x, y, value) {\n        this.rows[y].cells[x].solve(value);\n    }\n}\nexports.TableAnalyze = TableAnalyze;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Analyzer = void 0;\nclass Analyzer {\n    constructor(dict, analyzeTable, dictionaryTable) {\n        this.dict = dict;\n        this.analyzeTable = analyzeTable;\n        this.dictionaryTable = dictionaryTable;\n        this.x2s = 0;\n        this.x3s = 0;\n        this.vos = 0;\n        analyzeTable.goFunc = () => this.start();\n        analyzeTable.onSelect = (x, y, v) => this.updateFlagsCross(x, y, this.ensureSelection(x, y, v));\n    }\n    start() {\n        this.analyzeTable.lockInputs();\n        this.changeDictPage();\n        this.updateFlagsInitial();\n    }\n    changeDictPage() {\n        const coinsTotal = [0, 1, 2, 3, 4]\n            .map(y => this.analyzeTable.coinsRow(y))\n            .reduce((prev, cur) => prev + cur);\n        const voltsTotal = [0, 1, 2, 3, 4]\n            .map(y => this.analyzeTable.voltsRow(y))\n            .reduce((prev, cur) => prev + cur);\n        this.currentDictPage = this.dict.getPage(coinsTotal, voltsTotal);\n        this.dictionaryTable.setPage(this.currentDictPage);\n    }\n    getIndices(value) {\n        const result = [];\n        if (value & 1 /* PossibleValue.Voltorb */) {\n            result.push(1 /* SelectedValue.Voltorb */);\n        }\n        if (value & 2 /* PossibleValue.Coin1 */) {\n            result.push(2 /* SelectedValue.Coin1 */);\n        }\n        if (value & 4 /* PossibleValue.Coin2 */) {\n            result.push(3 /* SelectedValue.Coin2 */);\n        }\n        if (value & 8 /* PossibleValue.Coin3 */) {\n            result.push(4 /* SelectedValue.Coin3 */);\n        }\n        return result;\n    }\n    getFlags(values) {\n        let result = 0 /* PossibleValue.Impossible */;\n        for (const value of values) {\n            switch (value) {\n                case 1 /* SelectedValue.Voltorb */:\n                    result |= 1 /* PossibleValue.Voltorb */;\n                    break;\n                case 2 /* SelectedValue.Coin1 */:\n                    result |= 2 /* PossibleValue.Coin1 */;\n                    break;\n                case 3 /* SelectedValue.Coin2 */:\n                    result |= 4 /* PossibleValue.Coin2 */;\n                    break;\n                case 4 /* SelectedValue.Coin3 */:\n                    result |= 8 /* PossibleValue.Coin3 */;\n                    break;\n            }\n        }\n        return result;\n    }\n    getPossibleFlags(unsolved, coins, volts) {\n        let flags = 0 /* PossibleValue.Impossible */;\n        if (this.vos < this.currentDictPage.vosMax && volts) {\n            flags |= 1 /* PossibleValue.Voltorb */;\n        }\n        const rp = coins;\n        const rv = volts;\n        if (rp) {\n            if (this.x3s < this.currentDictPage.x3sMax && rp + rv >= unsolved + 2 && rp + rv * 3 <= unsolved * 3 - 0) {\n                flags |= 8 /* PossibleValue.Coin3 */;\n            }\n            if (this.x2s < this.currentDictPage.x2sMax && rp + rv >= unsolved + 1 && rp + rv * 3 <= unsolved * 3 - 1) {\n                flags |= 4 /* PossibleValue.Coin2 */;\n            }\n            if (rp + rv >= unsolved + 0 && rp + rv * 3 <= unsolved * 3 - 2) {\n                flags |= 2 /* PossibleValue.Coin1 */;\n            }\n        }\n        return flags;\n    }\n    checkFlagsAndSolve(x, y, flags, solvedCollection) {\n        const indices = this.getIndices(flags);\n        if (indices.length === 1) {\n            this.analyzeTable.solve(x, y, indices[0]);\n            switch (indices[0]) {\n                case 3 /* SelectedValue.Coin2 */:\n                    this.currentDictPage.filterByX2(++this.x2s);\n                    break;\n                case 4 /* SelectedValue.Coin3 */:\n                    this.currentDictPage.filterByX3(++this.x3s);\n                    break;\n                case 1 /* SelectedValue.Voltorb */:\n                    this.vos++;\n                    break;\n            }\n            solvedCollection?.push({ x, y });\n        }\n        if (indices.length === 0) {\n            throw new Error('Impossible initial value, check your input');\n        }\n    }\n    // TODO: disable this at test mode\n    ensureSelection(px, py, value) {\n        this.checkFlagsAndSolve(px, py, this.getFlags([value]), { push: (p) => this.updateFlagsCross(p.x, p.y, 0) });\n        return value;\n    }\n    updateFlagsCross(px, py, _value) {\n        const coinLeft = { row: this.analyzeTable.coinsRow(py), col: this.analyzeTable.coinsCol(px) };\n        const voltLeft = { row: this.analyzeTable.voltsRow(py), col: this.analyzeTable.voltsCol(px) };\n        const rowToUpdate = new Set([0, 1, 2, 3, 4]);\n        const colToUpdate = new Set([0, 1, 2, 3, 4]);\n        // colToUpdate.delete(py);\n        const countIn = (key, value) => {\n            if (value === 1 /* SelectedValue.Voltorb */) {\n                voltLeft[key] -= 1;\n                return true;\n            }\n            if (value > 1 /* SelectedValue.Coin0 */) {\n                coinLeft[key] -= value - 1 /* SelectedValue.Coin0 */;\n                return true;\n            }\n            return false;\n        };\n        for (const x of rowToUpdate.keys()) {\n            const output = this.analyzeTable.outputAt(x, py);\n            if (countIn('row', output.selectedValue) || countIn('row', output.solvedValue)) {\n                rowToUpdate.delete(x);\n            }\n        }\n        for (const y of colToUpdate.keys()) {\n            const output = this.analyzeTable.outputAt(px, y);\n            if (countIn('col', output.selectedValue) || countIn('col', output.solvedValue)) {\n                colToUpdate.delete(y);\n            }\n        }\n        const possibleValuesRow = this.getPossibleFlags(rowToUpdate.size, coinLeft.row, voltLeft.row);\n        const possibleValuesCol = this.getPossibleFlags(colToUpdate.size, coinLeft.col, voltLeft.col);\n        const solved = [];\n        for (const x of rowToUpdate.keys()) {\n            const output = this.analyzeTable.outputAt(x, py);\n            const flags = output.possibleValues & possibleValuesRow;\n            this.analyzeTable.setFlag(x, py, flags);\n            this.checkFlagsAndSolve(x, py, flags, solved);\n        }\n        for (const y of colToUpdate.keys()) {\n            const output = this.analyzeTable.outputAt(px, y);\n            const flags = output.possibleValues & possibleValuesCol;\n            this.analyzeTable.setFlag(px, y, flags);\n            this.checkFlagsAndSolve(px, y, flags, solved);\n        }\n        for (const item of solved) {\n            this.updateFlagsCross(item.x, item.y, 0);\n        }\n    }\n    updateFlagsInitial() {\n        const solved = [];\n        for (let y = 0; y < 5; y++) {\n            const rowCoins = this.analyzeTable.coinsRow(y);\n            const rowVolts = this.analyzeTable.voltsRow(y);\n            for (let x = 0; x < 5; x++) {\n                const colCoins = this.analyzeTable.coinsCol(x);\n                const colVolts = this.analyzeTable.voltsCol(x);\n                const rowFlags = this.getPossibleFlags(5, rowCoins, rowVolts);\n                const colFlags = this.getPossibleFlags(5, colCoins, colVolts);\n                const flags = rowFlags & colFlags;\n                this.analyzeTable.setFlag(x, y, flags);\n                this.checkFlagsAndSolve(x, y, flags, solved);\n            }\n        }\n        for (const item of solved) {\n            this.updateFlagsCross(item.x, item.y, 0);\n        }\n    }\n}\nexports.Analyzer = Analyzer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dictionary = exports.DictionaryPage = exports.DictionaryItem = void 0;\nconst utils_1 = require(\"./utils\");\nclass DictionaryItem {\n    constructor(level, // 1-8\n    x2s, // 0-8\n    x3s, // 0-7\n    vos) {\n        this.level = level;\n        this.x2s = x2s;\n        this.x3s = x3s;\n        this.vos = vos;\n    }\n    get coins() {\n        return 2 ** this.x2s * 3 ** this.x3s;\n    }\n}\nexports.DictionaryItem = DictionaryItem;\nclass DictionaryPage {\n    constructor(items) {\n        this.onUpdated = utils_1.noopFunc;\n        this.items = items ?? [];\n    }\n    static clone(page) {\n        return new this(page.items.slice());\n    }\n    filterByLevel(level) {\n        for (let i = 0; i < this.items.length; i++) {\n            if (this.items[i].level !== level) {\n                this.items.splice(i--, 1);\n            }\n        }\n        this.onUpdated();\n    }\n    filterByX2(x2s) {\n        for (let i = 0; i < this.items.length; i++) {\n            if (this.items[i].x2s < x2s) {\n                console.log(this.items);\n                this.items.splice(i--, 1);\n            }\n        }\n        this.onUpdated();\n    }\n    filterByX3(x3s) {\n        for (let i = 0; i < this.items.length; i++) {\n            if (this.items[i].x3s < x3s) {\n                this.items.splice(i--, 1);\n            }\n        }\n        this.onUpdated();\n    }\n    get x2sMax() {\n        return Math.max(...this.items.map(i => i.x2s));\n    }\n    get x3sMax() {\n        return Math.max(...this.items.map(i => i.x3s));\n    }\n    get vosMax() {\n        return Math.max(...this.items.map(i => i.vos));\n    }\n}\nexports.DictionaryPage = DictionaryPage;\nfunction getTotalMults(x2s, x3s, vos) {\n    const x1 = 25 - (x2s + x3s + vos);\n    return x1 + 2 * x2s + 3 * x3s;\n}\nclass Dictionary {\n    constructor() {\n        this.dict = {};\n        // multsTotal-voltorbs\n        this.addEntry(1, 0, 3, 6); // 25-06\n        this.addEntry(1, 3, 1, 6); // 24-06\n        this.addEntry(1, 2, 2, 6); // 25-06\n        this.addEntry(1, 5, 0, 6); // 24-06\n        this.addEntry(1, 4, 1, 6); // 25-06\n        this.addEntry(2, 1, 3, 7); // 25-07\n        this.addEntry(2, 0, 4, 7); // 26-07\n        this.addEntry(2, 3, 2, 7); // 25-07\n        this.addEntry(2, 6, 0, 7); // 24-07\n        this.addEntry(2, 5, 1, 7); // 25-07\n        this.addEntry(3, 2, 3, 8); // 25-08\n        this.addEntry(3, 1, 4, 8); // 26-08\n        this.addEntry(3, 4, 2, 8); // 25-08\n        this.addEntry(3, 7, 0, 8); // 24-08\n        this.addEntry(3, 6, 1, 8); // 25-08\n        this.addEntry(4, 0, 5, 8); // 27-08\n        this.addEntry(4, 3, 3, 8); // 26-08\n        this.addEntry(4, 2, 4, 10); // 25-10\n        this.addEntry(4, 5, 2, 10); // 24-10\n        this.addEntry(4, 8, 0, 10); // 23-10\n        this.addEntry(5, 1, 5, 10); // 26-10\n        this.addEntry(5, 4, 3, 10); // 25-10\n        this.addEntry(5, 7, 1, 10); // 24-10\n        this.addEntry(5, 6, 2, 10); // 25-10\n        this.addEntry(5, 9, 0, 10); // 24-10\n        this.addEntry(6, 0, 6, 10); // 27-10\n        this.addEntry(6, 3, 4, 10); // 26-10\n        this.addEntry(6, 2, 5, 10); // 27-10\n        this.addEntry(6, 5, 3, 10); // 26-10\n        this.addEntry(6, 8, 1, 10); // 25-10\n        this.addEntry(7, 4, 4, 10); // 27-10\n        this.addEntry(7, 7, 2, 10); // 26-10\n        this.addEntry(7, 6, 3, 10); // 27-10\n        this.addEntry(7, 1, 6, 13); // 25-13\n        this.addEntry(7, 9, 1, 13); // 23-13\n        this.addEntry(8, 0, 7, 10); // 29-10\n        this.addEntry(8, 2, 6, 10); // 29-10\n        this.addEntry(8, 5, 4, 10); // 28-10\n        this.addEntry(8, 8, 2, 10); // 27-10\n        this.addEntry(8, 7, 3, 10); // 28-10\n    }\n    addEntry(level, x2s, x3s, voltorbs) {\n        var _a, _b;\n        const collectionByMults = (_a = this.dict)[_b = getTotalMults(x2s, x3s, voltorbs)] ?? (_a[_b] = {});\n        const collectionEntries = collectionByMults[voltorbs] ?? (collectionByMults[voltorbs] = new DictionaryPage());\n        collectionEntries.items.push(new DictionaryItem(level, x2s, x3s, voltorbs));\n    }\n    getPage(coinsTotal, voltorbs) {\n        const page = this.dict[coinsTotal][voltorbs];\n        if (page) {\n            return page;\n        }\n        else {\n            console.warn(`Page doesn't exist, coins: ${coinsTotal}, voltorbs: ${voltorbs}`);\n            return new DictionaryPage();\n        }\n    }\n    freeze() {\n        Object.values(Object.freeze(this.dict))\n            .forEach(v => Object.values(Object.freeze(v))\n            .forEach(v => Object.freeze(v.items)));\n    }\n}\nexports.Dictionary = Dictionary;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TableDictionary = void 0;\nclass TableDictionary {\n    constructor(parent) {\n        this.tableElement = document.createElement('table');\n        this.nodesIndex = new Map();\n        parent.appendChild(this.tableElement);\n        this.renderTable();\n    }\n    renderTable() {\n        const row = this.tableElement.insertRow();\n        row.insertCell().innerHTML = `<b>level</b>`;\n        row.insertCell().innerHTML = `<b>x2s</b>`;\n        row.insertCell().innerHTML = `<b>x3s</b>`;\n        row.insertCell().innerHTML = `<b>coins</b>`;\n    }\n    renderItem(item) {\n        const row = this.tableElement.insertRow();\n        this.nodesIndex.set(item, row.rowIndex);\n        row.insertCell().innerText = item.level.toString();\n        row.insertCell().innerText = item.x2s.toString();\n        row.insertCell().innerText = item.x3s.toString();\n        row.insertCell().innerText = item.coins.toString();\n    }\n    removeItem(item) {\n        const nodeIndex = this.nodesIndex.get(item);\n        if (nodeIndex) {\n            const itemIds = new Map();\n            for (const [key, value] of this.nodesIndex.entries()) {\n                itemIds.set(key, this.tableElement.rows[value]);\n            }\n            this.tableElement.deleteRow(nodeIndex);\n            this.nodesIndex.delete(item);\n            itemIds.delete(item);\n            for (const [key, value] of itemIds.entries()) {\n                this.nodesIndex.set(key, value.rowIndex);\n            }\n        }\n        else {\n            console.warn('Removing dictionary item that doesn\\'t exist', item);\n        }\n    }\n    setPage(page) {\n        for (const key of this.nodesIndex.keys()) {\n            this.removeItem(key);\n        }\n        for (const item of page.items) {\n            this.renderItem(item);\n        }\n        page.onUpdated = () => {\n            const existingItems = new Set(this.nodesIndex.keys());\n            for (const item of page.items) {\n                if (!existingItems.delete(item)) {\n                    this.renderItem(item);\n                }\n            }\n            for (const item of existingItems.keys()) {\n                this.removeItem(item);\n            }\n        };\n    }\n}\nexports.TableDictionary = TableDictionary;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clamp = exports.noopFunc = void 0;\nconst noopFunc = () => { };\nexports.noopFunc = noopFunc;\nfunction clamp(value, min, max) {\n    return Math.max(Math.min(value, max), min);\n}\nexports.clamp = clamp;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst analyzer_1 = require(\"./analyzer\");\nconst analyzeTable_1 = require(\"./analyzeTable\");\nconst dictionary_1 = require(\"./dictionary\");\nconst dictionaryTable_1 = require(\"./dictionaryTable\");\nwindow.analyzer = new analyzer_1.Analyzer(window.dict = new dictionary_1.Dictionary(), window.analyzeTable = new analyzeTable_1.TableAnalyze(document.body), window.dictionaryTable = new dictionaryTable_1.TableDictionary(document.body));\n"],"names":["Object","defineProperty","exports","value","TableAnalyze","utils_1","InputCell","constructor","parent","this","cellType","inputCoins","document","createElement","inputVolts","canChangeInternal","onEnterPressed","noopFunc","type","min","max","addEventListener","ev","key","clamp","coins","toString","blur","select","volts","element","insertCell","append","reset","focus","parseInt","canChange","disabled","AnalyzeCell","onSelectChange","possibleValuesInternal","solvedValueInternal","selectedValue","btnV","createButton","btn1","btn2","btn3","updateButtonsStatus","displayText","button","onclick","innerText","classList","add","appendChild","updateButtonStatus","index","isPossible","isSelected","remove","possibleValues","solvedValue","solve","SolverRow","cells","lastEnterPress","insertRow","resetAnalyzeCells","i","length","cell","resetInputs","unlockInputs","static","row","inputCell","previousInputCell","push","goFunc","style","width","height","onSelect","createInputCell","goButton","createGoButton","click","tableElement","rows","createRowCells","x","createColCells","ctrlsDiv","btnResetAnalyze","forEach","r","btnUnlockInput","btnResetInput","coinsRow","y","voltsRow","coinsCol","voltsCol","outputAt","lockInputs","setFlag","flags","Analyzer","dict","analyzeTable","dictionaryTable","x2s","x3s","vos","start","v","updateFlagsCross","ensureSelection","changeDictPage","updateFlagsInitial","coinsTotal","map","reduce","prev","cur","voltsTotal","currentDictPage","getPage","setPage","getIndices","result","getFlags","values","getPossibleFlags","unsolved","vosMax","rp","rv","x3sMax","x2sMax","checkFlagsAndSolve","solvedCollection","indices","filterByX2","filterByX3","Error","px","py","p","_value","coinLeft","col","voltLeft","rowToUpdate","Set","colToUpdate","countIn","keys","output","delete","possibleValuesRow","size","possibleValuesCol","solved","item","rowCoins","rowVolts","colCoins","colVolts","Dictionary","DictionaryPage","DictionaryItem","level","items","onUpdated","page","slice","filterByLevel","splice","console","log","Math","addEntry","voltorbs","_a","_b","collectionByMults","getTotalMults","warn","freeze","TableDictionary","nodesIndex","Map","renderTable","innerHTML","renderItem","set","rowIndex","removeItem","nodeIndex","get","itemIds","entries","deleteRow","existingItems","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__","analyzer_1","analyzeTable_1","dictionary_1","dictionaryTable_1","window","analyzer","body"],"sourceRoot":""}